{"version":3,"sources":["components/utils/validation.js","components/utils/FieldLevelValidationForm.jsx","components/utils/FieldLevelValidationForm.module.css","assets/userProfile.png","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/InfoBlock/InfoBlock.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/Profile/InfoBlock/ProfileStatusWithHooks.jsx","components/Profile/InfoBlock/InfoBlock.jsx","components/Profile/MyPosts/MyPostsForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["required","values","maxLengthValidation","maxLength","length","FieldRequiredForm","Element","input","meta","error","touched","props","hasError","className","st","formControl","formErr","errMsg","createField","nameOfLabel","name","placeholder","component","typeOfField","validators","text","validate","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","TypeError","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","target","autoFocus","onBlur","updateStatus","onClick","InfoBlock","profile","Preloader","contacts","description","src","photos","large","profileImg","alt","ProfileStatusWithHooks","about","facebook","website","vk","twitter","instagram","youtube","github","mainlink","lookingForAJob","lookingForAJobDescription","fullName","userId","maxLength15","Textarea","reduxForm","form","handleSubmit","onSubmit","MyPosts","React","memo","addPost","post","posts","newPost","textOfPost","Post","message","likeCount","img","item","MyPostsContainer","connect","state","profilePage","postData","reverse","map","p","key","id","Profile","updateProfileStatus","ProfileContainer","this","getProfile","getProfileStatus","userID","match","params","autorizedUserID","history","Component","compose","isAuth","userAuth","withRouter"],"mappings":"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","file":"static/js/4.69865cd3.chunk.js","sourcesContent":["export const required = values => {\r\n    if(values) return undefined;\r\n    return \"That field is required!\";\r\n}\r\n\r\nexport const maxLengthValidation = maxLength => values => {\r\n    if(values.length >= maxLength) return `That field must to be contained less ${maxLength} symbols `;\r\n    return undefined;\r\n}","import React from 'react';\nimport st from './FieldLevelValidationForm.module.css';\nimport {Field} from \"redux-form\";\n\nexport const FieldRequiredForm = Element => ({input, meta: {error, touched}, ...props}) => {\n    const hasError = error && touched;\n    return (\n        <div className={st.formControl + \" \" + (hasError ? st.formErr : \"\")}>\n            <Element {...input} {...props}/>\n            <div>{hasError && <span className={st.errMsg}>{error}</span>}</div>\n        </div>\n    );\n}\n\nexport const createField = (nameOfLabel, name, placeholder, component, typeOfField = {}, validators, ...text) => {\n    return (\n        <div>\n            {nameOfLabel && <label>{nameOfLabel}</label>}\n            <Field name={name} placeholder={placeholder} component={component} {...typeOfField}\n                   validate={validators}/> {text}\n        </div>\n    )\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FieldLevelValidationForm_formControl__1Q8wm\",\"formErr\":\"FieldLevelValidationForm_formErr__1-Gm8\",\"errMsg\":\"FieldLevelValidationForm_errMsg__3qk7d\"};","module.exports = __webpack_public_path__ + \"static/media/userProfile.dc8b1732.png\";","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoImg\":\"InfoBlock_infoImg__1cxdH\",\"description\":\"InfoBlock_description__2MGbo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__2Pn3x\",\"newPost\":\"MyPosts_newPost__1BO1M\",\"post\":\"MyPosts_post__3AFXQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__20Rd0\"};","import React, {useState, useEffect} from \"react\";\n\nconst ProfileStatus = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(()=>{\n       setStatus(props.status);\n    }, [props.status])\n\n    const statusActivate = () => {\n        setEditMode(true);\n    };\n\n    const statusDeactivate = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    };\n\n    const statusChange = (e) => {\n        setStatus(e.target.value)\n    };\n\n        return (\n            <div>\n                {!editMode ?\n                    <div>\n                        Status: <span onClick={statusActivate}>{props.status || 'Status...'} </span>\n                    </div>\n                    :\n                    <div>\n                        Status: <input onChange={statusChange} autoFocus onBlur={statusDeactivate}\n                                       value={status} />\n                    </div>\n                }\n            </div>\n        );\n};\n\nexport default ProfileStatus;","import React from \"react\";\r\nimport st from \"./InfoBlock.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport profileImg from '../../../assets/userProfile.png';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst InfoBlock = ({profile, status, updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  let contacts = profile.contacts;\r\n\r\n  return (\r\n    <div>\r\n      <div className={st.description}>\r\n        <img src={profile.photos.large != null ? profile.photos.large : profileImg} alt=\"profileImg\" />\r\n          <ProfileStatusWithHooks className={st.about} status={status} updateStatus={updateStatus} />\r\n        <div className={st.contacts}>\r\n          <ul>Contacts:\r\n            <li>facebook: {contacts.facebook ? contacts.facebook : 'not yet'}</li>\r\n            <li>website: {contacts.website ? contacts.website : 'not yet'}</li>\r\n            <li>vk: {contacts.vk ? contacts.vk : 'not yet'}</li>\r\n            <li>twitter: {contacts.twitter ? contacts.website : 'not yet'}</li>\r\n            <li>instagram: {contacts.instagram ? contacts.instagram : 'not yet'}</li>\r\n            <li>youtube: {contacts.youtube ? contacts.youtube : 'not yet'}</li>\r\n            <li>github: {contacts.github ? contacts.github : 'not yet'}</li>\r\n            <li>mainlink: {contacts.mainlink ? contacts.mainlink : 'not yet'}</li>\r\n          </ul>\r\n        </div>\r\n        <p>looking for a job: {profile.lookingForAJob ? ':)' : ':('}</p>\r\n        <p>looking for a job description: {profile.lookingForAJobDescription ? profile.lookingForAJobDescription : 'not data'}</p>\r\n        <p>fullname: {profile.fullName ? profile.fullName : 'not data'}</p>\r\n        <p>UserID: {profile.userId ? profile.userId : 'not data'}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoBlock;","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {maxLengthValidation, required} from \"../../utils/validation\";\r\nimport {createField, FieldRequiredForm} from \"../../utils/FieldLevelValidationForm\";\r\n\r\nconst maxLength15 = maxLengthValidation(15);\r\nconst Textarea = FieldRequiredForm(\"textarea\");\r\n\r\nconst MyPostsForm = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(null, \"textOfPost\", \"Enter your post message...\", Textarea,\r\n                null, [required, maxLength15])}\r\n            <div>\r\n                <button>Add post!</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'posts'})(MyPostsForm);","import React from \"react\";\r\nimport st from \"./MyPosts.module.css\";\r\nimport MyPostsForm from \"./MyPostsForm\";\r\n\r\nconst MyPosts = React.memo(({addPost, post}) => {\r\n\r\n    let sendNewPost = (values) => {\r\n        addPost(values.textOfPost);\r\n    }\r\n\r\n    return (\r\n        <div className={st.posts}>\r\n            <h2>Posts:</h2>\r\n            <div className={st.newPost}>\r\n                New post\r\n                <div className={st.post}>\r\n                    <MyPostsForm onSubmit={sendNewPost}/>\r\n                </div>\r\n            </div>\r\n            {post}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport st from \"./Post.module.css\";\r\n\r\nconst Post = ({message, likeCount, img}) => {\r\n  return (\r\n    <div className={st.item}>\r\n      <img src={img} alt=\"pict\" />\r\n      {message}\r\n      <div>\r\n        <span>Like: {likeCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { addPost } from \"../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport Post from './Posts/Post';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    post: [...state.profilePage.postData]\r\n        .reverse()\r\n        .map(p => (<Post message={p.message} key={p.id} img={p.img} likeCount={p.likeCount} />)),\r\n    posts: state.profilePage\r\n  }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPost })(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport st from './Profile.module.css';\r\nimport InfoBlock from './InfoBlock/InfoBlock';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = ({profile, status, updateProfileStatus}) =>{\r\n  return ( \r\n    <div className={st.profilePage}>\r\n    <InfoBlock profile={profile} status={status} updateStatus={updateProfileStatus} />\r\n    <MyPostsContainer />\r\n    </div>\r\n    );\r\n  }\r\n  \r\n  export default Profile;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Profile from './Profile';\r\nimport {getProfile, getProfileStatus, updateProfileStatus} from '../Redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let {getProfile, getProfileStatus} = this.props;\r\n        let userID = this.props.match.params.userID;\r\n        if (!userID) {\r\n            userID = this.props.autorizedUserID;\r\n            if (!userID) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n\r\n        if (userID) {\r\n            this.props.history.push(`/profile/${userID}`);\r\n        }\r\n\r\n        getProfile(userID);\r\n        getProfileStatus(userID);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        isAuth: state.userAuth.isAuth,\r\n        autorizedUserID: state.userAuth.id\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getProfileStatus, updateProfileStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}