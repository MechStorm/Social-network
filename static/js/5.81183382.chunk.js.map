{"version":3,"sources":["components/utils/FieldLevelValidationForm.jsx","components/utils/FieldLevelValidationForm.module.css","components/utils/validation.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/Message/NewMessages/NewMessage.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/NewMessages/NewMessageForm.jsx","components/Dialogs/Message/NewMessages/NewMessage.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["FieldRequiredForm","Element","input","meta","error","touched","props","hasError","className","st","formControl","formErr","errMsg","createField","nameOfLabel","name","placeholder","component","typeOfField","validators","text","validate","module","exports","required","values","maxLengthValidation","maxLength","length","DialogItem","path","id","item","activeClassName","active","to","peopleImg","src","img","alt","lastName","title","Message","message","peopleAva","href","maxLength100","Textarea","reduxForm","form","onSubmitSuccess","res","dispatch","reset","onSubmit","handleSubmit","type","NewMessage","newMessages","addMessage","newMessage","Dialogs","dialogs","dialogsData","map","d","key","messages","messagesData","m","dialog","DialogsContainer","this","React","Component","compose","connect","state","withAuthRedirect"],"mappings":"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","file":"static/js/5.81183382.chunk.js","sourcesContent":["import React from 'react';\r\nimport st from './FieldLevelValidationForm.module.css';\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FieldRequiredForm = Element => ({input, meta: {error, touched}, ...props}) => {\r\n    const hasError = error && touched;\r\n    return (\r\n        <div className={st.formControl + \" \" + (hasError ? st.formErr : \"\")}>\r\n            <Element {...input} {...props}/>\r\n            <div>{hasError && <span className={st.errMsg}>{error}</span>}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const createField = (nameOfLabel, name, placeholder, component, typeOfField = {}, validators, ...text) => {\r\n    return (\r\n        <div>\r\n            {nameOfLabel && <label>{nameOfLabel}</label>}\r\n            <Field name={name} placeholder={placeholder} component={component} {...typeOfField}\r\n                   validate={validators}/> {text}\r\n        </div>\r\n    )\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FieldLevelValidationForm_formControl__3BmQt\",\"formErr\":\"FieldLevelValidationForm_formErr__3Mf0x\",\"errMsg\":\"FieldLevelValidationForm_errMsg__OdiRJ\"};","export const required = values => {\r\n    if(values) return undefined;\r\n    return \"That field is required!\";\r\n}\r\n\r\nexport const maxLengthValidation = maxLength => values => {\r\n    if(values.length >= maxLength) return `That field must to be contained less ${maxLength} symbols `;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Tqub\",\"dialog\":\"Dialogs_dialog__1kaKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__2Vl3K\",\"active\":\"DialogItem_active__1nP7G\",\"peopleImg\":\"DialogItem_peopleImg__eSVgq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__54GDT\",\"peopleAva\":\"Message_peopleAva__3aN_1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newMessages\":\"NewMessage_newMessages__yFrHx\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport st from \"./DialogItem.module.css\";\r\n\r\nconst DialogItem = props => {\r\n  let path = `/dialogs/${props.id}`;\r\n  return (\r\n    <div className={st.item}>\r\n      <NavLink activeClassName={st.active} to={path}>\r\n        <img className={st.peopleImg} src={props.img} alt={`${props.name} ${props.lastName}`} title={`${props.name} ${props.lastName}`} />\r\n          {props.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport st from \"./Message.module.css\";\r\n\r\nconst Message = props => {\r\n  return (\r\n    <div className={st.message}>\r\n      <div>\r\n        <a className={st.peopleAva} href=\"https://yandex.ru\" title={props.name}>\r\n          <img src={props.img} alt={props.name} />\r\n        </a>\r\n          {props.message}\r\n      </div>  \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport {reduxForm, reset} from \"redux-form\";\r\nimport {maxLengthValidation, required} from \"../../../utils/validation\";\r\nimport {createField, FieldRequiredForm} from \"../../../utils/FieldLevelValidationForm\";\r\n\r\nconst maxLength100 = maxLengthValidation(100);\r\nconst Textarea = FieldRequiredForm(\"textarea\");\r\n\r\nconst NewMessageForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {createField(null, \"newMessage\", \"Enter your message...\", Textarea, {type: \"input\"},\r\n                [required, maxLength100])}\r\n            <button>Add message</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst afterSubmit = (res, dispatch) => {\r\n    dispatch(reset('messages'));\r\n};\r\n\r\nexport default reduxForm({form: 'messages', onSubmitSuccess: afterSubmit})(NewMessageForm);","import React from \"react\";\r\nimport st from \"./NewMessage.module.css\";\r\nimport NewMessageForm from \"./NewMessageForm\";\r\n\r\nconst NewMessage = props => {\r\n\r\n  let sendMessage = values => {\r\n    props.addMessage(values.newMessage);\r\n  }\r\n  \r\n    return (\r\n      <div className={st.newMessages}>\r\n        <NewMessageForm onSubmit={sendMessage} />\r\n      </div>\r\n    );\r\n}\r\nexport default NewMessage;","import React from \"react\";\r\nimport st from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport NewMessage from \"./Message/NewMessages/NewMessage\";\r\n\r\nconst Dialogs = props => {\r\n  const dialogs = props.dialogs.dialogsData.map(d => (<DialogItem name={d.name} lastName={d.lastName} key={d.id} id={d.id} img={d.img} />));\r\n  const messages = props.dialogs.messagesData.map(m => (<Message message={m.message} name={m.name} key={m.id} id={m.id} img={m.img} />));\r\n\r\n  return (\r\n    <div className={st.dialogs}>\r\n      <div className={st.dialog}>{dialogs}</div>\r\n      <div className={st.messages}>\r\n        {messages}\r\n        <NewMessage addMessage={props.addMessage} dialogs={props.dialogs}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport Dialogs from \"./Dialogs\";\r\nimport { addMessage } from \"../Redux/dialogs-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass DialogsContainer extends React.Component {\r\n  render (){\r\n    return <Dialogs {...this.props}/>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dialogs: state.dialogs,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { addMessage }),\r\n  withAuthRedirect\r\n  )(DialogsContainer);"],"sourceRoot":""}