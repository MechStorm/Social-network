{"version":3,"sources":["components/utils/FieldLevelValidationForm.jsx","components/utils/FieldLevelValidationForm.module.css","components/utils/validation.js","components/common/Errors/Errors.module.css","components/Login/LoginPage.module.css","components/Login/LoginForm.jsx","components/Login/LoginPage.jsx"],"names":["FieldRequiredForm","Element","input","meta","error","touched","props","hasError","className","st","formControl","formErr","errMsg","createField","nameOfLabel","name","placeholder","component","typeOfField","validators","text","validate","module","exports","required","values","maxLengthValidation","maxLength","length","maxLength25","maxLength20","Input","reduxForm","form","handleSubmit","pristine","captchaUrl","onSubmit","type","disabled","src","alt","e","LoginPage","login","data","pass","rememberMe","captcha","userLogin","this","isAuth","to","id","loginField","React","Component","connect","state","userAuth"],"mappings":"sOAIaA,EAAoB,SAAAC,GAAO,OAAI,YAAgD,IAA9CC,EAA6C,EAA7CA,MAA6C,IAAtCC,KAAOC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAAaC,EAAW,gCACjFC,EAAWH,GAASC,EAC1B,OACI,yBAAKG,UAAWC,IAAGC,YAAc,KAAOH,EAAWE,IAAGE,QAAU,KAC5D,kBAACV,EAAD,iBAAaC,EAAWI,IACxB,6BAAMC,GAAY,0BAAMC,UAAWC,IAAGG,QAASR,OAK9CS,EAAc,SAACC,EAAaC,EAAMC,EAAaC,GAAqD,IAAC,IAA3CC,EAA0C,uDAA5B,GAAIC,EAAwB,0DAATC,EAAS,iCAATA,EAAS,kBAC7G,OACI,6BACKN,GAAe,+BAAQA,GACxB,kBAAC,IAAD,eAAOC,KAAMA,EAAMC,YAAaA,EAAaC,UAAWA,GAAeC,EAAvE,CACOG,SAAUF,KAHrB,IAGoCC,K,oBClB5CE,EAAOC,QAAU,CAAC,YAAc,8CAA8C,QAAU,0CAA0C,OAAS,2C,iCCD3I,oEAAO,IAAMC,EAAW,SAAAC,GACpB,IAAGA,EACH,MAAO,2BAGEC,EAAsB,SAAAC,GAAS,OAAI,SAAAF,GAC5C,GAAGA,EAAOG,QAAUD,EAAW,MAAM,wCAAN,OAA+CA,EAA/C,gB,oBCLnCL,EAAOC,QAAU,CAAC,OAAS,yB,oBCA3BD,EAAOC,QAAU,CAAC,WAAa,8BAA8B,OAAS,4B,2KCKhEM,EAAcH,YAAoB,IAClCI,EAAcJ,YAAoB,IAElCK,EAAQ/B,YAAkB,SAiCjBgC,cAAU,CAACC,KAAM,SAAjBD,EA/BG,SAAC,GAAiD,IAAhDE,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,SAAU/B,EAAuB,EAAvBA,MAAOgC,EAAgB,EAAhBA,WAC/C,OACI,0BAAMC,SAAUH,GAERrB,YAAY,QAAS,QAAS,QAASkB,EAAO,CAACO,KAAM,QAAS,CAACd,IAAUK,IAIzEhB,YAAY,WAAY,OAAQ,WAAYkB,EAAO,CAACO,KAAM,YAAa,CAACd,IAAUM,IAIlFjB,YAAY,KAAM,aAAc,KAAMkB,EAAO,CAACO,KAAM,YAAa,KAAM,eAG3E,4BAAQC,SAAUJ,GAAlB,SAEA,6BACKC,GAAc,yBAAKI,IAAKJ,EAAYK,IAAI,KACxCL,GAAcvB,YAAY,KAAM,UAAW,UAAWkB,EAAO,CAACO,KAAM,QAAS,CAACd,OAI/EpB,GAAS,yBAAKI,UAAWkC,IAAE9B,QACtBR,O,0PC5BfuC,E,2MAEFC,MAAQ,SAACC,GAAU,IAAD,E,yVAAA,IAC+BA,GAAxCD,EADS,EACTA,MAAOE,EADE,EACFA,KAAMC,EADJ,EACIA,WAAYC,EADhB,EACgBA,QAC9B,EAAK1C,MAAM2C,UAAUL,EAAOE,EAAMC,EAAYC,I,wEAI9C,OAAIE,KAAK5C,MAAM6C,OACJ,kBAAC,IAAD,CAAUC,GAAE,mBAAcF,KAAK5C,MAAM+C,MAGzC,yBAAK7C,UAAWC,IAAG6C,YACtB,qCACA,kBAAC,EAAD,CAAWjB,SAAUa,KAAKN,MAAOR,WAAYc,KAAK5C,MAAM0C,e,GAd5CO,IAAMC,WA2BfC,uBARO,SAAAC,GAClB,MAAO,CACHP,OAAQO,EAAMC,SAASR,OACvBE,GAAIK,EAAMC,SAASN,GACnBL,QAASU,EAAMC,SAASX,WAIQ,CAACC,eAA1BQ,CAAsCd","file":"static/js/6.048b41c4.chunk.js","sourcesContent":["import React from 'react';\nimport st from './FieldLevelValidationForm.module.css';\nimport {Field} from \"redux-form\";\n\nexport const FieldRequiredForm = Element => ({input, meta: {error, touched}, ...props}) => {\n    const hasError = error && touched;\n    return (\n        <div className={st.formControl + \" \" + (hasError ? st.formErr : \"\")}>\n            <Element {...input} {...props}/>\n            <div>{hasError && <span className={st.errMsg}>{error}</span>}</div>\n        </div>\n    );\n}\n\nexport const createField = (nameOfLabel, name, placeholder, component, typeOfField = {}, validators, ...text) => {\n    return (\n        <div>\n            {nameOfLabel && <label>{nameOfLabel}</label>}\n            <Field name={name} placeholder={placeholder} component={component} {...typeOfField}\n                   validate={validators}/> {text}\n        </div>\n    )\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FieldLevelValidationForm_formControl__1Q8wm\",\"formErr\":\"FieldLevelValidationForm_formErr__1-Gm8\",\"errMsg\":\"FieldLevelValidationForm_errMsg__3qk7d\"};","export const required = values => {\r\n    if(values) return undefined;\r\n    return \"That field is required!\";\r\n}\r\n\r\nexport const maxLengthValidation = maxLength => values => {\r\n    if(values.length >= maxLength) return `That field must to be contained less ${maxLength} symbols `;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errMsg\":\"Errors_errMsg__33YgT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginField\":\"LoginPage_loginField__3sQAr\",\"errMsg\":\"LoginPage_errMsg__1LpJQ\"};","import React from \"react\";\nimport {reduxForm} from \"redux-form\";\nimport {maxLengthValidation, required} from \"../utils/validation\";\nimport {createField, FieldRequiredForm} from \"../utils/FieldLevelValidationForm\";\nimport e from '../common/Errors/Errors.module.css';\n\nconst maxLength25 = maxLengthValidation(25);\nconst maxLength20 = maxLengthValidation(20);\n\nconst Input = FieldRequiredForm(\"input\");\n\nconst LoginForm = ({handleSubmit, pristine, error, captchaUrl}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {\n                createField(\"Login\", \"login\", \"Login\", Input, {type: \"text\"}, [required, maxLength25])\n            }\n\n            {\n                createField(\"Password\", \"pass\", \"Password\", Input, {type: \"password\"}, [required, maxLength20])\n            }\n\n            {\n                createField(null, \"rememberMe\", null, Input, {type: \"checkbox\"}, null, \"Remember me\")\n            }\n\n            <button disabled={pristine}>Login</button>\n\n            <div>\n                {captchaUrl && <img src={captchaUrl} alt=\"\" /> }\n                {captchaUrl && createField(null, \"captcha\", \"captcha\", Input, {type: \"text\"}, [required])}\n            </div>\n\n            {\n                error && <div className={e.errMsg}>\n                    {error}\n                </div>\n            }\n        </form>\n    );\n};\n\nexport default reduxForm({form: \"login\"})(LoginForm);","import React from \"react\";\r\nimport st from './LoginPage.module.css';\r\nimport LoginForm from \"./LoginForm\";\r\nimport {userLogin} from \"../Redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass LoginPage extends React.Component {\r\n\r\n    login = (data) => {\r\n        let {login, pass, rememberMe, captcha} = {...data};\r\n        this.props.userLogin(login, pass, rememberMe, captcha);\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isAuth) {\r\n            return <Redirect to={`/profile/${this.props.id}`} />\r\n        }\r\n\r\n        return <div className={st.loginField}>\r\n            <h1>Login</h1>\r\n            <LoginForm onSubmit={this.login} captchaUrl={this.props.captcha} />\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.userAuth.isAuth,\r\n        id: state.userAuth.id,\r\n        captcha: state.userAuth.captcha\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {userLogin})(LoginPage);"],"sourceRoot":""}