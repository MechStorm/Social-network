{"version":3,"sources":["components/utils/validation.js","components/utils/FieldLevelValidationForm.jsx","components/utils/FieldLevelValidationForm.module.css","components/Login/LoginPage.module.css","components/Login/LoginForm.jsx","components/Login/LoginPage.jsx"],"names":["required","values","maxLengthValidation","maxLength","length","FieldRequiredForm","Element","input","meta","error","touched","props","hasError","className","st","formControl","formErr","errMsg","createField","nameOfLabel","name","placeholder","component","typeOfField","validators","text","validate","module","exports","maxLength25","maxLength20","Input","reduxForm","form","handleSubmit","pristine","onSubmit","type","disabled","LoginPage","login","data","pass","rememberMe","userLogin","this","isAuth","to","id","loginField","React","Component","connect","state","userAuth"],"mappings":"0GAAA,oEAAO,IAAMA,EAAW,SAAAC,GACpB,IAAGA,EACH,MAAO,2BAGEC,EAAsB,SAAAC,GAAS,OAAI,SAAAF,GAC5C,GAAGA,EAAOG,QAAUD,EAAW,MAAM,wCAAN,OAA+CA,EAA/C,gB,6JCFtBE,EAAoB,SAAAC,GAAO,OAAI,YAAgD,IAA9CC,EAA6C,EAA7CA,MAA6C,IAAtCC,KAAOC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAAaC,EAAW,gCACjFC,EAAWH,GAASC,EAC1B,OACI,yBAAKG,UAAWC,IAAGC,YAAc,KAAOH,EAAWE,IAAGE,QAAU,KAC5D,kBAACV,EAAD,iBAAaC,EAAWI,IACxB,6BAAMC,GAAY,0BAAMC,UAAWC,IAAGG,QAASR,OAK9CS,EAAc,SAACC,EAAaC,EAAMC,EAAaC,GAAqD,IAAC,IAA3CC,EAA0C,uDAA5B,GAAIC,EAAwB,0DAATC,EAAS,iCAATA,EAAS,kBAC7G,OACI,6BACKN,GAAe,+BAAQA,GACxB,kBAAC,IAAD,eAAOC,KAAMA,EAAMC,YAAaA,EAAaC,UAAWA,GAAeC,EAAvE,CACOG,SAAUF,KAHrB,IAGoCC,K,oBClB5CE,EAAOC,QAAU,CAAC,YAAc,8CAA8C,QAAU,0CAA0C,OAAS,2C,oBCA3ID,EAAOC,QAAU,CAAC,WAAa,8BAA8B,OAAS,4B,yJCKhEC,EAAc3B,YAAoB,IAClC4B,EAAc5B,YAAoB,IAElC6B,EAAQ1B,YAAkB,SA2BjB2B,cAAU,CAACC,KAAM,SAAjBD,EAzBG,SAAC,GAAqC,IAApCE,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,SAAU1B,EAAW,EAAXA,MACxC,OACI,0BAAM2B,SAAUF,GAERhB,YAAY,QAAS,QAAS,QAASa,EAAO,CAACM,KAAM,QAAS,CAACrC,IAAU6B,IAIzEX,YAAY,WAAY,OAAQ,WAAYa,EAAO,CAACM,KAAM,YAAa,CAACrC,IAAU8B,IAIlFZ,YAAY,KAAM,aAAc,KAAMa,EAAO,CAACM,KAAM,YAAa,KAAM,eAG3E,4BAAQC,SAAUH,GAAlB,SAEI1B,GAAS,yBAAKI,UAAWC,IAAGG,QACvBR,O,0PCtBf8B,E,2MAEFC,MAAQ,SAACC,GAAU,IAAD,E,yVAAA,IACsBA,GAA/BD,EADS,EACTA,MAAOE,EADE,EACFA,KAAMC,EADJ,EACIA,WAClB,EAAKhC,MAAMiC,UAAUJ,EAAOE,EAAMC,I,wEAIlC,OAAIE,KAAKlC,MAAMmC,OACJ,kBAAC,IAAD,CAAUC,GAAE,mBAAcF,KAAKlC,MAAMqC,MAGzC,yBAAKnC,UAAWC,IAAGmC,YACtB,qCACA,kBAAC,EAAD,CAAWb,SAAUS,KAAKL,a,GAddU,IAAMC,WA0BfC,uBAPO,SAAAC,GAClB,MAAO,CACHP,OAAQO,EAAMC,SAASR,OACvBE,GAAIK,EAAMC,SAASN,MAIa,CAACJ,eAA1BQ,CAAsCb","file":"static/js/7.f5e9689e.chunk.js","sourcesContent":["export const required = values => {\r\n    if(values) return undefined;\r\n    return \"That field is required!\";\r\n}\r\n\r\nexport const maxLengthValidation = maxLength => values => {\r\n    if(values.length >= maxLength) return `That field must to be contained less ${maxLength} symbols `;\r\n    return undefined;\r\n}","import React from 'react';\nimport st from './FieldLevelValidationForm.module.css';\nimport {Field} from \"redux-form\";\n\nexport const FieldRequiredForm = Element => ({input, meta: {error, touched}, ...props}) => {\n    const hasError = error && touched;\n    return (\n        <div className={st.formControl + \" \" + (hasError ? st.formErr : \"\")}>\n            <Element {...input} {...props}/>\n            <div>{hasError && <span className={st.errMsg}>{error}</span>}</div>\n        </div>\n    );\n}\n\nexport const createField = (nameOfLabel, name, placeholder, component, typeOfField = {}, validators, ...text) => {\n    return (\n        <div>\n            {nameOfLabel && <label>{nameOfLabel}</label>}\n            <Field name={name} placeholder={placeholder} component={component} {...typeOfField}\n                   validate={validators}/> {text}\n        </div>\n    )\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FieldLevelValidationForm_formControl__1Q8wm\",\"formErr\":\"FieldLevelValidationForm_formErr__1-Gm8\",\"errMsg\":\"FieldLevelValidationForm_errMsg__3qk7d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginField\":\"LoginPage_loginField__3sQAr\",\"errMsg\":\"LoginPage_errMsg__1LpJQ\"};","import React from \"react\";\nimport {reduxForm} from \"redux-form\";\nimport {maxLengthValidation, required} from \"../utils/validation\";\nimport {createField, FieldRequiredForm} from \"../utils/FieldLevelValidationForm\";\nimport st from '../Login/LoginPage.module.css';\n\nconst maxLength25 = maxLengthValidation(25);\nconst maxLength20 = maxLengthValidation(20);\n\nconst Input = FieldRequiredForm(\"input\");\n\nconst LoginForm = ({handleSubmit, pristine, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {\n                createField(\"Login\", \"login\", \"Login\", Input, {type: \"text\"}, [required, maxLength25])\n            }\n\n            {\n                createField(\"Password\", \"pass\", \"Password\", Input, {type: \"password\"}, [required, maxLength20])\n            }\n\n            {\n                createField(null, \"rememberMe\", null, Input, {type: \"checkbox\"}, null, \"Remember me\")\n            }\n\n            <button disabled={pristine}>Login</button>\n            {\n                error && <div className={st.errMsg}>\n                    {error}\n                </div>\n            }\n        </form>\n    );\n};\n\nexport default reduxForm({form: \"login\"})(LoginForm);","import React from \"react\";\r\nimport st from './LoginPage.module.css';\r\nimport LoginForm from \"./LoginForm\";\r\nimport {userLogin} from \"../Redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass LoginPage extends React.Component {\r\n\r\n    login = (data) => {\r\n        let {login, pass, rememberMe} = {...data};\r\n        this.props.userLogin(login, pass, rememberMe);\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isAuth) {\r\n            return <Redirect to={`/profile/${this.props.id}`} />\r\n        }\r\n\r\n        return <div className={st.loginField}>\r\n            <h1>Login</h1>\r\n            <LoginForm onSubmit={this.login}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.userAuth.isAuth,\r\n        id: state.userAuth.id\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {userLogin})(LoginPage);"],"sourceRoot":""}